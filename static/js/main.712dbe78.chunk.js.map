{"version":3,"sources":["services/projects.js","actions/projectActions.js","services/tasks.js","actions/taskboardActions.js","services/taskboards.js","operations/taskboardOperations.js","reducers/taskReducer.js","reducers/statusReducer.js","reducers/projectReducer.js","reducers/taskboardReducer.js","reducers/backlogReducer.js","store.js","actions/taskActions.js","operations/taskOperations.js","components/Project/ProjectDropdown.js","operations/projectOperations.js","components/Task/TaskDropdown.js","components/NavBar.js","components/Task/TaskControls.js","components/Task/Task.js","components/Task/TaskForm.js","components/Task/EditTaskForm.js","components/Task/EditTaskModal.js","components/Status/StatusColumn.js","components/Placeholder.js","components/Taskboard/TaskboardToolbar.js","components/Taskboard/Taskboard.js","components/Project/ProjectInfo.js","services/statuses.js","actions/statusActions.js","components/Task/NewTaskForm.js","actions/backlogActions.js","components/Task/BacklogToolbar.js","operations/backlogOperations.js","components/Task/Backlog.js","components/Project/ProjectForm.js","components/User/UserForm.js","services/users.js","components/User/LoginForm.js","App.js","operations/statusOperations.js","operations/userOperations.js","index.js"],"names":["getAll","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","response","wrap","_context","prev","next","axios","get","sent","abrupt","data","stop","this","apply","arguments","createNew","_ref2","_callee2","project","_context2","post","_x","services_projects","update","_ref3","_callee3","_context3","put","concat","id","_x2","projectActions","projects","type","services_tasks","getAllFromProject","task","_ref4","_callee4","_context4","_x3","remove","_ref5","_callee5","_context5","delete","_x4","taskboardActions","taskboard","filter","sortBy","layout","taskboards","getOne","addTaskToBoard","taskboardId","dispatch","getState","currentTaskboard","updatedTaskboard","taskboardService","objectSpread","defineProperty","status","toConsumableArray","Creators","t0","console","warn","removeTaskFromBoard","taskId","_x5","_x6","updateTaskOnBoard","boardInfo","calculateLayout","_x7","_x8","_objectSpread4","oldStatus","newStatus","destinationIndex","slice","sourceIndex","indexOf","move","initialState","taskReducer","state","length","undefined","action","tasks","filteredTasks","statusReducer","statuses","all","selected","selectCurrentProject","find","projectReducer","filteredProjects","taskboardReducer","includeFromTaskboards","backlogReducer","reducer","combineReducers","backlog","store","createStore","composeWithDevTools","applyMiddleware","thunk","selectTasksAsMap","reduce","obj","FromTasks","_state$projects","FromProjects","selectStatuses","taskActions","initTasks","taskService","createTask","newTask","selectedProject","deleteTask","t1","updateTask","updatedTask","save","t2","removeTask","updateTaskboard","ProjectDropdown","_React$PureComponent","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","key","value","_this$props","props","selectProject","react_default","createElement","Dropdown","className","item","simple","text","name","Menu","map","Item","onClick","React","PureComponent","connect","selectProjects","localStorage","setItem","JSON","stringify","TaskDropdown","render","options","as","Link","to","NavBar","fixed","size","Container","NavLink","exact","activeClassName","Task_TaskDropdown","Project_ProjectDropdown","withRouter","TaskControls","editTask","style","marginTop","Button","icon","basic","Icon","Task","_this","editMode","_this$props2","_this$props3","hide","Card","fluid","marginBottom","display","Content","Header","Description","description","extra","color","alignItems","justifyContent","moment","updatedAt","format","Task_TaskControls","defaultProps","TaskForm","_getPrototypeOf2","_len","args","Array","_key","call","getStatusDropdown","getTaskboardDopdown","handleChange","setFieldValue","handleSubmit","onCancel","onDelete","values","Form","onSubmit","Input","label","onChange","selection","e","placeholder","defaultValue","clearable","disabled","float","FormikTaskForm","withFormik","mapPropsToValues","_ref4$initialValues","initialValues","_initialValues$name","_initialValues$descri","_initialValues$status","_initialValues$taskbo","EditTaskForm","formData","Infinity","stopTaskEdit","Task_TaskForm","EditTaskModal","Modal","open","Task_EditTaskForm","StatusColumn","column","hideItems","columnTasks","filterOptions","includes","selectColumnTasks","index","react_beautiful_dnd_esm","draggableId","provided","snapshot","assign","ref","innerRef","draggableProps","dragHandleProps","components_Task_Task","isDragging","Task_EditTaskModal","Placeholder","width","height","position","top","bottom","left","right","margin","TaskboardToolbar","boardId","updateTaskboardFilter","updateTaskboardSortBy","loadTaskboard","boardOptions","Taskboard","componentDidMount","initTaskboard","onDragEnd","result","taskboardHasFiltersActive","changeTaskStatus","_result$destination","destination","source","droppableId","Taskboard_TaskboardToolbar","Grid","columns","stackable","Column","minHeight","padding","backgroundColor","isDraggingOver","Status_StatusColumn","components_Placeholder","components_Taskboard_Taskboard","selectCurrentLayout","oldTask","exception","savedBoard","getItem","ProjectInfo","tasksByStatus","PieChart","Legend","Tooltip","Pie","dataKey","nameKey","outerRadius","entry","Cell","fill","selectTasksByStatus","selectTasks","services_statuses","statusActions","NewTaskForm","history","push","backlogActions","toggleIncludeFromTaskboards","Checkbox","toggle","alignSelf","checked","Backlog","log","BacklogToolbar","List","celled","relaxed","ProjectForm","_ref2$initialValues","UserForm","username","password","autoComplete","_initialValues$userna","_initialValues$passwo","users","user","App","_PureComponent","initProjects","initStatuses","Promise","projectFormOnSubmit","createProject","userFormOnSubmit","createUser","_this2","BrowserRouter","components_NavBar","paddingTop","Route","path","Project_ProjectInfo","Task_Backlog","Project_ProjectForm","Task_NewTaskForm","User_UserForm","LoginForm","statusService","parse","projectService","newProject","userService","ReactDOM","es","src_App","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.712dbe78.chunk.js","sourcesContent":["import axios from 'axios';\nconst baseUrl = 'api/projects';\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl);\n  return response.data;\n};\n\nconst createNew = async project => {\n  const response = await axios.post(baseUrl, project);\n  return response.data;\n};\n\nconst update = async project => {\n  const response = await axios.put(`${baseUrl}/${project.id}`, project);\n  return response.data;\n};\n\nexport default { getAll, update, createNew };\n","const initProjects = projects => ({\n  type: 'INIT_PROJECTS',\n  projects\n});\n\nconst changeSelected = project => ({\n  type: 'CHANGE_SELECTED',\n  project\n});\n\nconst createProject = project => ({\n  type: 'CREATE_PROJECT',\n  project\n});\n\nconst updateProject = project => ({\n  type: 'UPDATE_PROJECT',\n  project\n});\n\nexport default {\n  initProjects,\n  changeSelected,\n  createProject,\n  updateProject\n};\n","import axios from 'axios';\nconst baseUrl = 'api/tasks';\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl);\n  return response.data;\n};\n\nconst getAllFromProject = async id => {\n  const response = await axios.get(`${baseUrl}/project/${id}`);\n  return response.data;\n};\n\nconst createNew = async task => {\n  const response = await axios.post(baseUrl, task);\n  return response.data;\n};\n\nconst update = async task => {\n  const response = await axios.put(`${baseUrl}/${task.id}`, task);\n  return response.data;\n};\n\nconst remove = async task => {\n  const response = await axios.delete(`${baseUrl}/${task.id}`);\n  return response.data;\n};\n\nexport default { getAll, getAllFromProject, createNew, update, remove };\n","const initTaskboard = taskboard => ({\n  type: 'INIT_TASKBOARD',\n  taskboard\n});\n\nconst updateTaskboardFilter = filter => ({\n  type: 'UPDATE_TASKBOARD_FILTER',\n  filter\n});\n\nconst updateTaskboardSortBy = sortBy => ({\n  type: 'UPDATE_TASKBOARD_SORT_BY',\n  sortBy\n});\n\nconst updateTaskboardLayout = layout => ({\n  type: 'UPDATE_TASKBOARD_LAYOUT',\n  layout\n});\n\nexport default {\n  initTaskboard,\n  updateTaskboardFilter,\n  updateTaskboardSortBy,\n  updateTaskboardLayout\n};\n","import axios from 'axios';\nconst baseUrl = 'api/taskboards';\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl);\n  return response.data;\n};\n\nconst getOne = async id => {\n  const response = await axios.get(`${baseUrl}/${id}`);\n  return response.data;\n};\n\nconst createNew = async taskboard => {\n  const response = await axios.post(baseUrl, taskboard);\n  return response.data;\n};\n\nconst update = async taskboard => {\n  const response = await axios.put(`${baseUrl}/${taskboard.id}`, taskboard);\n  return response.data;\n};\n\nconst remove = async taskboard => {\n  const response = await axios.delete(`${baseUrl}/${taskboard.id}`);\n  return response.data;\n};\n\nexport default { getAll, getOne, createNew, update, remove };\n","import Creators from '../actions/taskboardActions';\nimport taskboardService from '../services/taskboards';\nimport move from 'lodash-move';\n\nexport const initTaskboard = () => async dispatch => {\n  try {\n    const savedBoard = localStorage.getItem('currentBoard');\n    const taskboard = await taskboardService.getOne(savedBoard);\n    dispatch(Creators.initTaskboard(taskboard));\n  } catch (excpetion) {\n    console.warn('Error when initializing taskboard', excpetion);\n  }\n};\nexport const updateTaskboardFilter = filter => {\n  return Creators.updateTaskboardFilter(filter);\n};\n\nexport const updateTaskboardSortBy = sortBy => {\n  return Creators.updateTaskboardSortBy(sortBy);\n};\n\nexport const loadTaskboard = id => async dispatch => {\n  if (!id) {\n    dispatch(Creators.initTaskboard(null));\n  } else {\n    try {\n      const taskboard = await taskboardService.getOne(id);\n      dispatch(Creators.initTaskboard(taskboard));\n      localStorage.setItem('currentBoard', taskboard.id);\n    } catch (excpetion) {\n      console.warn('Error when loading taskboard', excpetion);\n    }\n  }\n};\n\nexport const addTaskToBoard = (task, taskboardId) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    let currentTaskboard;\n    if (taskboardId) {\n      currentTaskboard = await taskboardService.getOne(taskboardId);\n    } else {\n      currentTaskboard = getState().taskboard;\n    }\n    const layout = {\n      ...currentTaskboard.layout,\n      [task.status.id]: [...currentTaskboard.layout[task.status.id], task.id]\n    };\n    const updatedTaskboard = await taskboardService.update({\n      ...currentTaskboard,\n      layout\n    });\n    dispatch(Creators.updateTaskboardLayout(updatedTaskboard.layout));\n  } catch (excpetion) {\n    console.warn('Error when adding a task to a taskboard', excpetion);\n  }\n};\n\nexport const removeTaskFromBoard = task => async (dispatch, getState) => {\n  try {\n    const currentTaskboard = getState().taskboard;\n    const layout = {\n      ...currentTaskboard.layout,\n      [task.status.id]: currentTaskboard.layout[task.status.id].filter(\n        taskId => taskId !== task.id\n      )\n    };\n    const updatedTaskboard = await taskboardService.update({\n      ...currentTaskboard,\n      layout\n    });\n    dispatch(Creators.updateTaskboardLayout(updatedTaskboard.layout));\n  } catch (excpetion) {\n    console.warn('Error when removing task from taskboard', excpetion);\n  }\n};\n\nexport const updateTaskOnBoard = (task, boardInfo) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    const currentTaskboard = getState().taskboard;\n    let layout = calculateLayout(currentTaskboard.layout, task, boardInfo);\n    dispatch(Creators.updateTaskboardLayout(layout));\n    await taskboardService.update({ ...currentTaskboard, layout });\n  } catch (excpetion) {\n    console.warn('Error when updating a taskboard', excpetion);\n  }\n};\n\n/**\n * Calculates new layout when a taks's status is changed.\n * @param {object} layout Current layout\n * @param {object} task Task to update\n * @param {object} boardInfo Information needed to calculate the new taskboad\n * @param {string} boardInfo.oldStatus Id of the orevious status\n * @param {string} boardInfo.newStatus Id of the new status\n * @param {number} boardInfo.destinationIndex Index in the new column\n */\nconst calculateLayout = (layout, task, boardInfo) => {\n  const { oldStatus, newStatus, destinationIndex } = boardInfo;\n  if (oldStatus !== newStatus) {\n    return {\n      ...layout,\n      [oldStatus]: layout[oldStatus].filter(taskId => taskId !== task.id),\n      [newStatus]: [\n        ...layout[newStatus].slice(0, destinationIndex),\n        task.id,\n        ...layout[newStatus].slice(destinationIndex)\n      ]\n    };\n  } else {\n    const sourceIndex = layout[oldStatus].indexOf(task.id);\n    return {\n      ...layout,\n      [oldStatus]: move(layout[oldStatus], sourceIndex, destinationIndex)\n    };\n  }\n};\n","import { sortBy } from 'lodash';\n\nconst initialState = [];\nexport const taskReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'INIT_TASKS':\n      return action.tasks;\n    case 'CREATE_TASK':\n      return [...state, action.task];\n    case 'UPDATE_TASK': {\n      const filteredTasks = state.filter(task => task.id !== action.task.id);\n      return [...filteredTasks, action.task];\n    }\n    case 'DELETE_TASK':\n      return state.filter(task => task.id !== action.task.id);\n    default:\n      return state;\n  }\n};\n\nexport const selectTasksByStatus = (tasks, statuses) => {\n  return statuses.map(status => ({\n    status,\n    tasks: tasks.filter(task => task.status.id === status.id)\n  }));\n};\n\nexport const selectTasksAsMap = tasks => {\n  return tasks.length\n    ? tasks.reduce(\n      (obj, task) => ({\n        ...obj,\n        [task.id]: task\n      }),\n      {}\n    )\n    : null;\n};\n\nexport const selectColumnTasks = (tasks, column, filterOptions) => {\n  if (!tasks || !column) return [];\n  let columnTasks = column.map(taskId => tasks[taskId]);\n  if (filterOptions.filter) {\n    columnTasks = columnTasks.filter(task =>\n      task.name.includes(filterOptions.filter)\n    );\n  }\n  if (filterOptions.sortBy) {\n    columnTasks = sortBy(columnTasks, [filterOptions.sortBy]);\n  }\n  return columnTasks;\n};\n\nexport default taskReducer;\n","const initialState = [];\n\nconst statusReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'INIT_STATUSES':\n      return action.statuses;\n    default:\n      return state;\n  }\n};\n\nexport default statusReducer;\n","const initialState = {\n  all: [],\n  selected: null\n};\n\nconst projectReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'INIT_PROJECTS': {\n      const { projects, selected } = action;\n      return { ...state, all: projects, selected };\n    }\n    case 'CHANGE_SELECTED':\n      return { ...state, selected: action.project };\n    case 'CREATE_PROJECT':\n      return { ...state, all: [...state.all, action.project] };\n    case 'UPDATE_PROJECT': {\n      let filteredProjects = state.all.filter(\n        project => project.id !== action.project.id\n      );\n      return {\n        ...state,\n        all: [...filteredProjects, action.project]\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport const selectCurrentProject = (all, selected) => {\n  return all.find(project => project.id === selected);\n};\n\nexport const selectCurrentTaskboard = (all, selected) => {\n  const selectedProject = selectCurrentProject(all, selected);\n  return selectedProject ? selectedProject.taskboard : null;\n};\n\nexport default projectReducer;\n","const initialState = {\n  filter: '',\n  sortBy: '',\n  layout: null\n};\n\nexport const taskboardReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'INIT_TASKBOARD': {\n      return { ...initialState, ...action.taskboard };\n    }\n    case 'UPDATE_TASKBOARD_FILTER': {\n      return { ...state, filter: action.filter };\n    }\n    case 'UPDATE_TASKBOARD_SORT_BY': {\n      return { ...state, sortBy: action.sortBy };\n    }\n    case 'UPDATE_TASKBOARD_LAYOUT': {\n      return { ...state, layout: action.layout };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default taskboardReducer;\n","const initialState = {\n  includeFromTaskboards: false\n};\n\nconst backlogReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'TOGGLE_INCLUDE_FROM_TASKBOARDS': {\n      return { ...state, includeFromTaskboards: !state.includeFromTaskboards };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default backlogReducer;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport taskReducer, * as FromTasks from './reducers/taskReducer';\nimport statusReducer from './reducers/statusReducer';\nimport projectReducer, * as FromProjects from './reducers/projectReducer';\nimport taskboardReducer from './reducers/taskboardReducer';\nimport backlogReducer from './reducers/backlogReducer';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nconst reducer = combineReducers({\n  tasks: taskReducer,\n  statuses: statusReducer,\n  projects: projectReducer,\n  taskboard: taskboardReducer,\n  backlog: backlogReducer\n});\n\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\n\n//Task selectors\nexport const selectTasksByStatus = state => {\n  const { tasks, statuses } = state;\n  return FromTasks.selectTasksByStatus(tasks, statuses);\n};\n\nexport const selectTasks = state => {\n  return state.tasks;\n};\n\nexport const selectTasksAsMap = state => {\n  const { tasks } = state;\n  return FromTasks.selectTasksAsMap(tasks);\n};\n\n//Project selectors\nexport const selectProjects = state => {\n  return state.projects.all;\n};\n\nexport const selectCurrentProject = state => {\n  const { all, selected } = state.projects;\n  return FromProjects.selectCurrentProject(all, selected);\n};\n\n//Status selectors\nexport const selectStatuses = state => {\n  return state.statuses;\n};\n\n//Taskboard selectors\nexport const selectCurrentLayout = state => {\n  return state.taskboard.layout;\n};\n\nexport const taskboardHasFiltersActive = state => {\n  return state.taskboard.filter || state.taskboard.sortBy;\n};\n\nexport default store;\n","const initTasks = tasks => ({\n  type: 'INIT_TASKS',\n  tasks\n});\n\nconst createTask = task => ({\n  type: 'CREATE_TASK',\n  task\n});\n\nconst updateTask = task => ({\n  type: 'UPDATE_TASK',\n  task\n});\n\nconst deleteTask = task => ({\n  type: 'DELETE_TASK',\n  task\n});\n\nexport default {\n  initTasks,\n  createTask,\n  updateTask,\n  deleteTask\n};\n","import taskService from '../services/tasks';\nimport {\n  addTaskToBoard,\n  removeTaskFromBoard,\n  updateTaskOnBoard\n} from '../operations/taskboardOperations';\nimport { selectCurrentProject } from '../store';\nimport Creators from '../actions/taskActions';\n\n/**\n * Fetch all tasks from the given project.\n * @param {number} id Id of project whose tasks will be fetched\n */\nexport const initTasks = id => {\n  return async dispatch => {\n    try {\n      const tasks = await taskService.getAllFromProject(id);\n      dispatch(Creators.initTasks(tasks));\n    } catch (exception) {\n      console.warn('Error when fetching tasks', exception);\n    }\n  };\n};\n\n/**\n * Create a new task and update current project's taskboard.\n * @param {object} newTask Task to create\n */\nexport const createTask = (newTask, taskboardId) => async (\n  dispatch,\n  getState\n) => {\n  const selectedProject = selectCurrentProject(getState());\n  try {\n    const task = await taskService.createNew({\n      ...newTask,\n      taskboard: taskboardId,\n      project: selectedProject.id\n    });\n    try {\n      await dispatch(addTaskToBoard(task, taskboardId));\n      dispatch(Creators.createTask(task));\n    } catch (exception) {\n      taskService.deleteTask(task);\n    }\n  } catch (exception) {\n    console.warn('Error when creating a task', exception);\n  }\n};\n\n/**\n * Update the given task.\n * @param {object} updatedTask Task to update\n */\nexport const updateTask = (\n  updatedTask,\n  save = true,\n  boardInfo\n) => async dispatch => {\n  try {\n    const task = save ? await taskService.update(updatedTask) : updatedTask;\n    dispatch(Creators.updateTask(task));\n    if (boardInfo) {\n      try {\n        await dispatch(updateTaskOnBoard(task, boardInfo));\n      } catch (exception) {\n        await taskService.update({ ...task, status: boardInfo.oldStatus });\n        dispatch(Creators.updateTask({ ...task, status: boardInfo.oldStatus }));\n      }\n    }\n  } catch (exception) {\n    console.warn('Error when updating a task', exception);\n  }\n};\n\n/**\n * Change status of a task and update current project's taskboard.\n * @param {object} task Task to update\n */\nexport const changeTaskStatus = (task, boardInfo) => async dispatch => {\n  try {\n    dispatch(updateTask(task));\n    try {\n      dispatch(updateTaskOnBoard(task, boardInfo));\n    } catch (exception) {\n      const oldTask = { ...task, status: boardInfo.oldStatus };\n      taskService.update(oldTask);\n      Creators.updateTask(oldTask);\n    }\n  } catch (exception) {\n    console.warn('Error when changing task status', exception);\n  }\n};\n\n/**\n * Remove the given task and update currently selected project's taskboard.\n * @param {object} task Task to remove.\n */\nexport const removeTask = (task, updateTaskboard = true) => {\n  return async dispatch => {\n    try {\n      await taskService.remove(task);\n      if (updateTaskboard) {\n        await dispatch(removeTaskFromBoard(task));\n      }\n      dispatch(Creators.deleteTask(task));\n    } catch (exception) {\n      console.warn('Error when removing a task', exception);\n    }\n  };\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { selectProject } from '../../operations/projectOperations';\nimport { selectProjects, selectCurrentProject } from '../../store';\nimport { Dropdown } from 'semantic-ui-react';\n\nexport class ProjectDropdown extends React.PureComponent {\n  render() {\n    const { selectedProject, projects, selectProject } = this.props;\n    return (\n      <Dropdown\n        className=\"dropdown\"\n        item\n        simple\n        text={selectedProject ? selectedProject.name : 'Project'}\n      >\n        <Dropdown.Menu>\n          {projects.map(project => (\n            <Dropdown.Item\n              className=\"dropdown-item\"\n              key={project.name}\n              onClick={() => selectProject(project.id)}\n            >\n              {project.name}\n            </Dropdown.Item>\n          ))}\n        </Dropdown.Menu>\n      </Dropdown>\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    projects: selectProjects(state),\n    selectedProject: selectCurrentProject(state)\n  }),\n  { selectProject }\n)(ProjectDropdown);\n","import projectService from '../services/projects';\nimport Creators from '../actions/projectActions';\nimport { initTasks } from '../operations/taskOperations';\n\nexport const initProjects = () => {\n  let selected;\n  try {\n    selected = JSON.parse(localStorage.getItem('selectedProject'));\n  } catch (exception) {\n    selected = null;\n  }\n  return async dispatch => {\n    try {\n      const projects = await projectService.getAll();\n      dispatch(Creators.initProjects(projects));\n      if (selected) {\n        dispatch(Creators.changeSelected(selected));\n        dispatch(initTasks(selected));\n      }\n    } catch (exception) {\n      console.log('Error when initializing projects', exception);\n    }\n  };\n};\n\nexport const selectProject = project => async dispatch => {\n  try {\n    localStorage.setItem('selectedProject', JSON.stringify(project));\n  } finally {\n    dispatch(Creators.changeSelected(project));\n    dispatch(initTasks(project));\n  }\n};\n\nexport const createProject = project => async dispatch => {\n  try {\n    const newProject = await projectService.createNew(project);\n    dispatch(Creators.createProject(newProject));\n  } catch (exception) {\n    console.log('Error when creating a project', exception);\n  }\n};\n\nexport const updateProject = (project, save = true) => async dispatch => {\n  try {\n    const updatedProject = save\n      ? await projectService.update(project)\n      : project;\n    dispatch(Creators.updateProject(updatedProject));\n  } catch (exception) {\n    console.warn('Error when updating a project', exception);\n  }\n};\n","import React from 'react';\nimport { Dropdown } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\n\nclass TaskDropdown extends React.PureComponent {\n  render = () => {\n    const options = [\n      {\n        key: 'Backlog',\n        text: 'Backlog',\n        value: 'Backlog',\n        className: 'nav-link',\n        as: Link,\n        to: '/backlog'\n      },\n      {\n        key: 'New task',\n        text: 'New task',\n        value: 'New task',\n        className: 'nav-link',\n        as: Link,\n        to: '/create'\n      }\n    ];\n    return <Dropdown simple item text=\"Tasks\" options={options} />;\n  };\n}\n\nexport default TaskDropdown;\n","import React from 'react';\nimport { NavLink, withRouter } from 'react-router-dom';\nimport { Menu, Container } from 'semantic-ui-react';\nimport ProjectDropdown from './Project/ProjectDropdown';\nimport TaskDropdown from './Task/TaskDropdown';\n\nexport class NavBar extends React.PureComponent {\n  render() {\n    return (\n      <Menu fixed=\"top\" size=\"huge\">\n        <Container>\n          <Menu.Item\n            name=\"Info\"\n            className=\"nav-link\"\n            as={NavLink}\n            exact\n            to=\"/\"\n            activeClassName=\"active\"\n          />\n          <TaskDropdown />\n          <Menu.Item\n            name=\"Taskboard\"\n            className=\"nav-link\"\n            as={NavLink}\n            exact\n            to=\"/taskboard\"\n            activeClassName=\"active\"\n          />\n          <Menu.Item\n            name=\"Create project\"\n            className=\"nav-link\"\n            as={NavLink}\n            exact\n            to=\"/new_project\"\n            activeClassName=\"active\"\n          />\n          <ProjectDropdown />\n          <Menu.Item\n            name=\"Login\"\n            className=\"nav-link\"\n            as={NavLink}\n            exact\n            to=\"/login\"\n            activeClassName=\"active\"\n          />\n          <Menu.Item\n            name=\"Register\"\n            className=\"nav-link\"\n            as={NavLink}\n            exact\n            to=\"/new_user\"\n            activeClassName=\"active\"\n          />\n        </Container>\n      </Menu>\n    );\n  }\n}\n\nexport default withRouter(NavBar);\n","import React from 'react';\nimport { Icon, Button } from 'semantic-ui-react';\n\nconst TaskControls = props => {\n  const { editTask } = props;\n  return (\n    <div style={{ marginTop: 5 }}>\n      <Button icon basic size=\"mini\" onClick={editTask}>\n        <Icon size=\"large\" name=\"ellipsis horizontal\" />\n      </Button>\n    </div>\n  );\n};\n\nexport default TaskControls;\n","import React from 'react';\nimport { Card } from 'semantic-ui-react';\nimport TaskControls from './TaskControls';\nimport moment from 'moment';\n\nclass Task extends React.PureComponent {\n  updateTask = () => {\n    const { task, updateTask } = this.props;\n    updateTask({ ...task, editMode: true }, false);\n  };\n\n  removeTask = () => {\n    const { task, removeTask } = this.props;\n    removeTask(task);\n  };\n\n  render() {\n    const { task, hide } = this.props;\n\n    return (\n      <Card fluid style={{ marginBottom: 10, display: hide ? 'none' : '' }}>\n        <Card.Content>\n          <Card.Header>{task.name}</Card.Header>\n          <Card.Content>\n            <Card.Description>{task.description}</Card.Description>\n          </Card.Content>\n          <Card.Content extra style={{ color: 'gray' }}>\n            <div\n              style={{\n                display: 'flex',\n                alignItems: 'flex-end',\n                justifyContent: 'space-between'\n              }}\n            >\n              <div>{moment(task.updatedAt).format('DD.MM.YYYY')}</div>\n              <TaskControls\n                removeTask={this.removeTask}\n                editTask={this.updateTask}\n              />\n            </div>\n          </Card.Content>\n        </Card.Content>\n      </Card>\n    );\n  }\n}\n\nTask.defaultProps = {\n  task: {}\n};\n\nexport default Task;\n","import React from 'react';\nimport { Form, Button } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport { createTask } from '../../operations/taskOperations';\nimport { withFormik } from 'formik';\nimport { selectStatuses, selectCurrentProject } from '../../store';\n\nexport class TaskForm extends React.PureComponent {\n  getStatusDropdown = statuses => {\n    return statuses.map(status => ({\n      key: status.name,\n      text: status.name,\n      value: status.id\n    }));\n  };\n\n  getTaskboardDopdown = project => {\n    if (!project || !project.taskboards) return [];\n    const options = project.taskboards.map(taskboard => ({\n      key: taskboard.id,\n      text: taskboard.name,\n      value: taskboard.id\n    }));\n    return [{ key: 'backlog', text: 'Backlog', value: 'backlog' }, ...options];\n  };\n\n  render() {\n    const {\n      statuses,\n      handleChange,\n      setFieldValue,\n      handleSubmit,\n      onCancel,\n      onDelete,\n      values,\n      project\n    } = this.props;\n    return (\n      <Form onSubmit={handleSubmit}>\n        <Form.Input\n          className=\"form-field\"\n          label=\"Name\"\n          onChange={handleChange}\n          value={values.name}\n          name=\"name\"\n        />\n        <Form.Input\n          className=\"form-field\"\n          label=\"Description\"\n          onChange={handleChange}\n          value={values.description}\n          name=\"description\"\n        />\n        <Form.Dropdown\n          className=\"form-field\"\n          selection\n          label=\"Status\"\n          options={this.getStatusDropdown(statuses)}\n          onChange={(e, { name, value }) => setFieldValue(name, value)}\n          name=\"status\"\n          placeholder=\"Status\"\n          defaultValue={values.status}\n        />\n        <Form.Dropdown\n          className=\"form-field\"\n          selection\n          clearable\n          label=\"Taskboard\"\n          options={this.getTaskboardDopdown(project)}\n          onChange={(e, { name, value }) => setFieldValue(name, value)}\n          name=\"taskboard\"\n          placeholder=\"Taskboard\"\n          defaultValue={values.taskboard}\n          disabled={values.backlog}\n        />\n        <Button type=\"submit\" color=\"blue\">\n          Submit\n        </Button>\n        {onCancel && (\n          <Button type=\"button\" className=\"cancel\" onClick={onCancel}>\n            Cancel\n          </Button>\n        )}\n        {onDelete && (\n          <Button\n            type=\"button\"\n            color=\"red\"\n            className=\"delete\"\n            style={{ float: 'right' }}\n            onClick={onDelete}\n          >\n            Delete\n          </Button>\n        )}\n      </Form>\n    );\n  }\n}\n\nTaskForm.defaultProps = {\n  statuses: []\n};\n\nexport const handleSubmit = (values, { props }) => {\n  props.onSubmit(values);\n};\n\nexport const FormikTaskForm = withFormik({\n  mapPropsToValues: ({ initialValues = {} }) => {\n    const {\n      name = '',\n      description = '',\n      status = {},\n      taskboard = ''\n    } = initialValues;\n    return {\n      name,\n      description,\n      taskboard,\n      status: status.id || ''\n    };\n  },\n  handleSubmit\n})(TaskForm);\n\nexport default connect(\n  state => ({\n    statuses: selectStatuses(state),\n    project: selectCurrentProject(state)\n  }),\n  { createTask }\n)(FormikTaskForm);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { updateTask, removeTask } from '../../operations/taskOperations';\nimport TaskForm from './TaskForm';\n\nexport class EditTaskForm extends React.PureComponent {\n  onSubmit = formData => {\n    const { task, updateTask } = this.props;\n    let boardInfo = null;\n    if (task.status.id !== formData.status) {\n      boardInfo = {\n        oldStatus: task.status.id,\n        newStatus: formData.status,\n        destinationIndex: Infinity\n      };\n    }\n    updateTask(\n      { ...task, ...formData, project: task.project.id },\n      true,\n      boardInfo\n    );\n  };\n\n  stopTaskEdit = task => {\n    const { updateTask } = this.props;\n    return () => updateTask({ ...task, editMode: false }, false);\n  };\n\n  removeTask = () => {\n    const { task, removeTask } = this.props;\n    removeTask(task);\n  };\n\n  render() {\n    const { task } = this.props;\n    return (\n      <TaskForm\n        onSubmit={this.onSubmit}\n        onCancel={this.stopTaskEdit(task)}\n        onDelete={this.removeTask}\n        initialValues={task}\n      />\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { updateTask, removeTask }\n)(EditTaskForm);\n","import React from 'react';\nimport { Modal } from 'semantic-ui-react';\nimport EditTaskForm from './EditTaskForm';\n\nconst EditTaskModal = props => {\n  const { task } = props;\n  return (\n    <Modal open={task.editMode}>\n      <Modal.Header>Edit task</Modal.Header>\n      <Modal.Content>\n        <EditTaskForm task={task} />\n      </Modal.Content>\n    </Modal>\n  );\n};\n\nexport default EditTaskModal;\n","import React from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport Task from '../Task/Task';\nimport { connect } from 'react-redux';\nimport { removeTask, updateTask } from '../../operations/taskOperations';\nimport { selectCurrentProject } from '../../store';\nimport { selectColumnTasks } from '../../reducers/taskReducer';\nimport EditTaskModal from '../Task/EditTaskModal';\n\nexport class StatusColumn extends React.PureComponent {\n  render() {\n    const {\n      tasks,\n      column,\n      filter,\n      sortBy,\n      removeTask,\n      updateTask,\n      hideItems\n    } = this.props;\n    const columnTasks = selectColumnTasks(tasks, column, { filter, sortBy });\n\n    return (\n      <div>\n        <div>\n          {columnTasks.map(\n            (task, index) =>\n              task && (\n                <div className=\"draggable-task\" key={task.id}>\n                  <Draggable key={task.id} draggableId={task.id} index={index}>\n                    {(provided, snapshot) => (\n                      <div\n                        key={task.id}\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                      >\n                        <Task\n                          task={task}\n                          removeTask={removeTask}\n                          updateTask={updateTask}\n                          hide={snapshot && !snapshot.isDragging && hideItems}\n                        />\n                        <EditTaskModal task={task} />\n                      </div>\n                    )}\n                  </Draggable>\n                </div>\n              )\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nStatusColumn.defaultProps = {\n  tasks: [],\n  status: {}\n};\n\nexport default connect(\n  state => ({\n    selectedProject: selectCurrentProject(state),\n    filter: state.taskboard.filter,\n    sortBy: state.taskboard.sortBy\n  }),\n  { removeTask, updateTask }\n)(StatusColumn);\n","import React from 'react';\n\nconst Placeholder = () => {\n  return (\n    <div\n      className=\"placeholder\"\n      style={{\n        width: 200,\n        height: 100,\n        position: 'absolute',\n        top: 0,\n        bottom: 0,\n        left: 0,\n        right: 0,\n        margin: 'auto'\n      }}\n    >\n      <h1>Select project</h1>\n    </div>\n  );\n};\n\nexport default Placeholder;\n","import React from 'react';\nimport { Input, Dropdown } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport {\n  updateTaskboardFilter,\n  updateTaskboardSortBy,\n  loadTaskboard\n} from '../../operations/taskboardOperations';\nimport { selectCurrentProject } from '../../store';\n\nclass TaskboardToolbar extends React.PureComponent {\n  render() {\n    const {\n      filter,\n      project,\n      boardId,\n      updateTaskboardFilter,\n      updateTaskboardSortBy,\n      loadTaskboard\n    } = this.props;\n    const sortOptions = [{ key: 1, text: 'Name', value: 'name' }];\n    const boardOptions = project.taskboards.map(taskboard => {\n      return { key: taskboard.id, text: taskboard.name, value: taskboard.id };\n    });\n    return (\n      <div\n        style={{\n          marginBottom: 10,\n          display: 'flex',\n          justifyContent: 'space-evenly'\n        }}\n      >\n        <Input\n          icon=\"search\"\n          placeholder=\"Filter...\"\n          value={filter}\n          onChange={(e, data) => updateTaskboardFilter(data.value)}\n        />\n        <Dropdown\n          placeholder=\"Sort by\"\n          clearable\n          selection\n          options={sortOptions}\n          onChange={(e, data) => updateTaskboardSortBy(data.value)}\n        />\n        <Dropdown\n          placeholder=\"Select taskboard\"\n          clearable\n          selection\n          value={boardId}\n          options={boardOptions}\n          onChange={(e, data) => loadTaskboard(data.value)}\n        />\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    boardId: state.taskboard.id,\n    filter: state.taskboard.filter,\n    project: selectCurrentProject(state)\n  }),\n  { updateTaskboardFilter, updateTaskboardSortBy, loadTaskboard }\n)(TaskboardToolbar);\n","import React from 'react';\nimport { Grid } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport StatusColumn from '../Status/StatusColumn';\nimport { changeTaskStatus } from '../../operations/taskOperations';\nimport { initTaskboard } from '../../operations/taskboardOperations';\nimport {\n  selectTasksAsMap,\n  selectCurrentProject,\n  selectCurrentLayout,\n  selectStatuses,\n  taskboardHasFiltersActive\n} from '../../store';\nimport Placeholder from '../Placeholder';\nimport TaskboardToolbar from './TaskboardToolbar';\n\nexport class Taskboard extends React.PureComponent {\n  componentDidMount = () => {\n    if (!this.props.layout) {\n      this.props.initTaskboard();\n    }\n  };\n\n  onDragEnd = async result => {\n    const { tasks, taskboardHasFiltersActive, changeTaskStatus } = this.props;\n    if (!result.destination) return;\n    const { droppableId: oldStatus } = result.source;\n    const {\n      droppableId: newStatus,\n      index: destinationIndex\n    } = result.destination;\n    const task = tasks[result.draggableId];\n    const updatedTask = { ...task, status: newStatus };\n    await changeTaskStatus(updatedTask, {\n      oldStatus,\n      newStatus,\n      destinationIndex: taskboardHasFiltersActive ? Infinity : destinationIndex\n    });\n  };\n\n  render() {\n    const {\n      selectedProject,\n      statuses,\n      layout,\n      tasks,\n      taskboardHasFiltersActive\n    } = this.props;\n\n    if (!selectedProject) return <Placeholder />;\n\n    return (\n      <div style={{ height: '100%' }}>\n        <TaskboardToolbar />\n        <DragDropContext onDragEnd={this.onDragEnd}>\n          <Grid\n            columns={statuses.length || 1}\n            style={{ alignItems: 'flex-start' }}\n            stackable\n          >\n            {statuses.map(status => (\n              <Grid.Column key={status.name}>\n                <h1>{status.name}</h1>\n                <Droppable droppableId={status.id}>\n                  {(provided, snapshot) => (\n                    <div\n                      ref={provided.innerRef}\n                      style={{\n                        minHeight: '100%',\n                        padding: 5,\n                        backgroundColor:\n                          snapshot && snapshot.isDraggingOver\n                            ? 'lightsalmon'\n                            : ''\n                      }}\n                    >\n                      <StatusColumn\n                        key={status.name}\n                        tasks={tasks}\n                        column={layout ? layout[status.id] : []}\n                        status={status}\n                        hideItems={\n                          taskboardHasFiltersActive && snapshot.isDraggingOver\n                        }\n                      />\n                      {provided.placeholder}\n                    </div>\n                  )}\n                </Droppable>\n              </Grid.Column>\n            ))}\n          </Grid>\n        </DragDropContext>\n      </div>\n    );\n  }\n}\n\nTaskboard.defaultProps = {\n  statuses: [],\n  taskboard: {}\n};\n\nexport default connect(\n  state => ({\n    tasks: selectTasksAsMap(state),\n    statuses: selectStatuses(state),\n    selectedProject: selectCurrentProject(state),\n    layout: selectCurrentLayout(state),\n    taskboardHasFiltersActive: taskboardHasFiltersActive(state)\n  }),\n  { changeTaskStatus, initTaskboard }\n)(Taskboard);\n","import React from 'react';\nimport { PieChart, Pie, Tooltip, Cell, Legend } from 'recharts';\nimport { connect } from 'react-redux';\nimport Placeholder from '../Placeholder';\nimport {\n  selectTasksByStatus,\n  selectTasks,\n  selectCurrentProject\n} from '../../store';\n\nexport class ProjectInfo extends React.PureComponent {\n  render() {\n    const { selectedProject, tasksByStatus, tasks } = this.props;\n    if (!selectedProject) return <Placeholder />;\n\n    const data = tasksByStatus.map(obj => ({\n      name: obj.status.name,\n      value: obj.tasks.length,\n      color: obj.status.color\n    }));\n    return (\n      <div className=\"project-info\">\n        <div style={{ display: 'inline-block' }}>\n          <h2>Name: {selectedProject.name}</h2>\n          <h3>Total tasks: {tasks.length}</h3>\n          {tasksByStatus.map(obj => (\n            <h3 className=\"status-info\" key={obj.status.name}>\n              {obj.status.name}: {obj.tasks.length}\n            </h3>\n          ))}\n        </div>\n        <PieChart width={250} height={250} style={{ float: 'right' }}>\n          <Legend />\n          <Tooltip />\n          <Pie data={data} dataKey=\"value\" nameKey=\"name\" outerRadius={100}>\n            {data.map(entry => (\n              <Cell key={entry.name} fill={entry.color} />\n            ))}\n          </Pie>\n        </PieChart>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    tasksByStatus: selectTasksByStatus(state),\n    selectedProject: selectCurrentProject(state),\n    tasks: selectTasks(state)\n  }),\n  null\n)(ProjectInfo);\n","import axios from 'axios';\nconst baseUrl = '/api/statuses';\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl);\n  return response.data;\n};\n\nexport default { getAll };\n","const initStatuses = statuses => ({\n  type: 'INIT_STATUSES',\n  statuses\n});\n\nexport default {\n  initStatuses\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { createTask } from '../../operations/taskOperations';\nimport Placeholder from '../Placeholder';\nimport TaskForm from './TaskForm';\nimport { selectCurrentProject } from '../../store';\n\nexport class NewTaskForm extends React.PureComponent {\n  onSubmit = formData => {\n    const { createTask, history } = this.props;\n    createTask(formData, formData.taskboard);\n    history.push('/');\n  };\n\n  render() {\n    const { selectedProject } = this.props;\n\n    if (!selectedProject) return <Placeholder />;\n\n    return <TaskForm onSubmit={this.onSubmit} />;\n  }\n}\n\nexport default connect(\n  state => ({\n    selectedProject: selectCurrentProject(state)\n  }),\n  { createTask }\n)(NewTaskForm);\n","const toggleIncludeFromTaskboards = () => ({\n  type: 'TOGGLE_INCLUDE_FROM_TASKBOARDS'\n});\n\nexport default {\n  toggleIncludeFromTaskboards\n};\n","import React from 'react';\nimport { Input, Dropdown, Checkbox } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport { toggleIncludeFromTaskboards } from '../../operations/backlogOperations';\nimport { selectCurrentProject } from '../../store';\n\nclass TaskboardToolbar extends React.PureComponent {\n  render() {\n    const { includeFromTaskboards, toggleIncludeFromTaskboards } = this.props;\n    const sortOptions = [{ key: 1, text: 'Name', value: 'name' }];\n    return (\n      <div\n        style={{\n          marginBottom: 10,\n          display: 'flex',\n          justifyContent: 'space-evenly'\n        }}\n      >\n        <Checkbox\n          toggle\n          label=\"Include tasks from taskboards.\"\n          style={{ alignSelf: 'center' }}\n          checked={includeFromTaskboards}\n          onChange={toggleIncludeFromTaskboards}\n        />\n        <Input icon=\"search\" placeholder=\"Filter...\" />\n        <Dropdown\n          placeholder=\"Sort by\"\n          clearable\n          selection\n          options={sortOptions}\n        />\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    boardId: state.taskboard.id,\n    filter: state.taskboard.filter,\n    project: selectCurrentProject(state),\n    includeFromTaskboards: state.backlog.includeFromTaskboards\n  }),\n  { toggleIncludeFromTaskboards }\n)(TaskboardToolbar);\n","import Creators from '../actions/backlogActions';\n\nexport const toggleIncludeFromTaskboards = () => {\n  return Creators.toggleIncludeFromTaskboards();\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { List } from 'semantic-ui-react';\nimport moment from 'moment';\nimport BacklogToolbar from './BacklogToolbar';\n\nclass Backlog extends React.PureComponent {\n  render = () => {\n    const { tasks, includeFromTaskboards } = this.props;\n    const filteredTasks = includeFromTaskboards\n      ? tasks\n      : tasks.filter(task => !task.taskboard);\n    console.log(includeFromTaskboards);\n    return (\n      <div>\n        <BacklogToolbar />\n        <List celled relaxed>\n          {filteredTasks.map(task => (\n            <List.Item key={task.id}>\n              <List.Header as=\"h3\">{task.name}</List.Header>\n              <List.Description>{task.description}</List.Description>\n              <List.Description>\n                {`Updated at: ${moment(task.updatedAt).format('DD.MM.YYYY')}`}\n              </List.Description>\n            </List.Item>\n          ))}\n        </List>\n      </div>\n    );\n  };\n}\n\nexport default connect(\n  state => ({\n    tasks: state.tasks,\n    includeFromTaskboards: state.backlog.includeFromTaskboards\n  }),\n  null\n)(Backlog);\n","import React from 'react';\nimport { Form, Button } from 'semantic-ui-react';\nimport { withFormik } from 'formik';\n\nexport class ProjectForm extends React.PureComponent {\n  render = () => {\n    const { values, handleSubmit, handleChange } = this.props;\n    return (\n      <Form onSubmit={handleSubmit}>\n        <Form.Input\n          className=\"form-field\"\n          label=\"Name\"\n          onChange={handleChange}\n          value={values.name}\n          name=\"name\"\n        />\n        <Button type=\"submit\" color=\"blue\">\n          Submit\n        </Button>\n      </Form>\n    );\n  };\n}\n\nconst handleSubmit = (values, { props }) => {\n  props.onSubmit(values);\n};\n\nexport default withFormik({\n  mapPropsToValues: ({ initialValues = {} }) => {\n    const { name = '' } = initialValues;\n    return { name };\n  },\n  handleSubmit\n})(ProjectForm);\n","import React from 'react';\nimport { Form, Button } from 'semantic-ui-react';\nimport { withFormik } from 'formik';\n\nexport class UserForm extends React.PureComponent {\n  render = () => {\n    const { values, handleSubmit, handleChange } = this.props;\n    return (\n      <Form onSubmit={handleSubmit}>\n        <Form.Input\n          className=\"form-field\"\n          label=\"Name\"\n          onChange={handleChange}\n          value={values.name}\n          name=\"name\"\n        />\n        <Form.Input\n          className=\"form-field\"\n          label=\"Username\"\n          onChange={handleChange}\n          value={values.username}\n          name=\"username\"\n        />\n        <Form.Input\n          id=\"signup-password-field_\"\n          className=\"form-field\"\n          label=\"Password\"\n          onChange={handleChange}\n          value={values.password}\n          name=\"password\"\n          type=\"password\"\n          autoComplete=\"new-password\"\n        />\n        <Button type=\"submit\" color=\"blue\">\n          Submit\n        </Button>\n      </Form>\n    );\n  };\n}\n\nconst handleSubmit = (values, { props }) => {\n  props.onSubmit(values);\n};\n\nexport default withFormik({\n  mapPropsToValues: ({ initialValues = {} }) => {\n    const { name = '', username = '', password = '' } = initialValues;\n    return { name, username, password };\n  },\n  handleSubmit\n})(UserForm);\n","import axios from 'axios';\nconst baseUrl = 'api/users';\n\nconst createNew = async user => {\n  const response = await axios.post(baseUrl, user);\n  return response.data;\n};\n\nexport default { createNew };\n","import React from 'react';\nimport { Form, Button } from 'semantic-ui-react';\nimport { withFormik } from 'formik';\n\nexport class UserForm extends React.PureComponent {\n  render = () => {\n    const { values, handleSubmit, handleChange } = this.props;\n    return (\n      <Form onSubmit={handleSubmit}>\n        <Form.Input\n          className=\"form-field\"\n          label=\"Username\"\n          onChange={handleChange}\n          value={values.username}\n          name=\"username\"\n        />\n        <Form.Input\n          id=\"signup-password-field_\"\n          className=\"form-field\"\n          label=\"Password\"\n          onChange={handleChange}\n          value={values.password}\n          name=\"password\"\n          type=\"password\"\n          autoComplete=\"new-password\"\n        />\n        <Button type=\"submit\" color=\"blue\">\n          Submit\n        </Button>\n      </Form>\n    );\n  };\n}\n\nconst handleSubmit = (values, { props }) => {\n  props.onSubmit(values);\n};\n\nexport default withFormik({\n  mapPropsToValues: ({ initialValues = {} }) => {\n    const { username = '', password = '' } = initialValues;\n    return { username, password };\n  },\n  handleSubmit\n})(UserForm);\n","import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { Container } from 'semantic-ui-react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport NavBar from './components/NavBar';\nimport Taskboard from './components/Taskboard/Taskboard';\nimport ProjectInfo from './components/Project/ProjectInfo';\nimport { initTasks } from './operations/taskOperations';\nimport { initStatuses } from './operations/statusOperations';\nimport { initProjects, createProject } from './operations/projectOperations';\nimport NewTaskForm from './components/Task/NewTaskForm';\nimport Backlog from './components/Task/Backlog';\nimport ProjectForm from './components/Project/ProjectForm';\nimport UserForm from './components/User/UserForm';\nimport { createUser } from './operations/userOperations';\nimport LoginForm from './components/User/LoginForm';\n\nexport class App extends PureComponent {\n  componentDidMount = async () => {\n    const { initProjects, initStatuses } = this.props;\n    await Promise.all([initStatuses(), initProjects()]);\n  };\n\n  projectFormOnSubmit = history => formData => {\n    const { createProject } = this.props;\n    createProject(formData);\n    history.push('/');\n  };\n\n  userFormOnSubmit = history => formData => {\n    const { createUser } = this.props;\n    createUser(formData);\n    history.push('/');\n  };\n\n  render() {\n    return (\n      <Router>\n        <div style={{ height: '100%' }}>\n          <NavBar />\n          <Container style={{ paddingTop: 60, height: '100%' }}>\n            <Route exact path=\"/\" render={() => <ProjectInfo />} />\n            <Route exact path=\"/backlog\" render={() => <Backlog />} />\n            <Route exact path=\"/taskboard\" render={() => <Taskboard />} />\n            <Route\n              exact\n              path=\"/new_project\"\n              render={({ history }) => (\n                <ProjectForm onSubmit={this.projectFormOnSubmit(history)} />\n              )}\n            />\n            <Route\n              exact\n              path=\"/create\"\n              render={({ history }) => <NewTaskForm history={history} />}\n            />\n            <Route\n              exact\n              path=\"/new_user\"\n              render={({ history }) => (\n                <UserForm onSubmit={this.userFormOnSubmit(history)} />\n              )}\n            />\n            <Route\n              exact\n              path=\"/login\"\n              render={({ history }) => <LoginForm />}\n            />\n          </Container>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    selectedProject: state.projects.selected\n  }),\n  { initTasks, initStatuses, initProjects, createProject, createUser }\n)(App);\n","import statusService from '../services/statuses';\nimport Creators from '../actions/statusActions';\n\nexport const initStatuses = () => {\n  return async dispatch => {\n    try {\n      const statuses = await statusService.getAll();\n      dispatch(Creators.initStatuses(statuses));\n    } catch (exception) {\n      console.warn('Error when initializing statuses', exception);\n    }\n  };\n};\n","import userService from '../services/users';\n\nexport const createUser = user => async dispatch => {\n  try {\n    userService.createNew(user);\n  } catch (exception) {\n    console.log('Error when creating a user', exception);\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from './store';\nimport { Provider } from 'react-redux';\nimport 'semantic-ui-css/semantic.min.css';\n\nconst render = () => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById('root')\n  );\n};\n\nrender();\nstore.subscribe(render);\n"],"sourceRoot":""}